<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="9" passed="7" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-02-27T22:00:45 IST" name="Suite" finished-at="2024-02-27T22:01:40 IST" duration-ms="54933">
    <groups>
      <group name="regression">
        <method signature="SearchDoctors.validateSpeciality()[pri:3, instance:testCases.SearchDoctors@71d44a3]" name="validateSpeciality" class="testCases.SearchDoctors"/>
        <method signature="ListingReqDoctors.validateFilters()[pri:4, instance:testCases.ListingReqDoctors@41d477ed]" name="validateFilters" class="testCases.ListingReqDoctors"/>
        <method signature="ListingReqDoctors.getDetails()[pri:5, instance:testCases.ListingReqDoctors@41d477ed]" name="getDetails" class="testCases.ListingReqDoctors"/>
        <method signature="CorporateForm.validateForm()[pri:9, instance:testCases.CorporateForm@397fbdb]" name="validateForm" class="testCases.CorporateForm"/>
      </group> <!-- regression -->
      <group name="smoke">
        <method signature="SearchDoctors.validateLogo()[pri:1, instance:testCases.SearchDoctors@71d44a3]" name="validateLogo" class="testCases.SearchDoctors"/>
        <method signature="SearchDoctors.validateTitle()[pri:2, instance:testCases.SearchDoctors@71d44a3]" name="validateTitle" class="testCases.SearchDoctors"/>
        <method signature="SearchDoctors.validateSpeciality()[pri:3, instance:testCases.SearchDoctors@71d44a3]" name="validateSpeciality" class="testCases.SearchDoctors"/>
        <method signature="ListingReqDoctors.getDetails()[pri:5, instance:testCases.ListingReqDoctors@41d477ed]" name="getDetails" class="testCases.ListingReqDoctors"/>
        <method signature="ListingSurgeries.verifySurgeryPage()[pri:6, instance:testCases.ListingSurgeries@3590fc5b]" name="verifySurgeryPage" class="testCases.ListingSurgeries"/>
        <method signature="CorporateForm.verifyFormPage()[pri:8, instance:testCases.CorporateForm@397fbdb]" name="verifyFormPage" class="testCases.CorporateForm"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2024-02-27T22:00:45 IST" name="Test" finished-at="2024-02-27T22:01:40 IST" duration-ms="54933">
      <class name="testCases.ListingSurgeries">
        <test-method signature="verifySurgeryPage()[pri:6, instance:testCases.ListingSurgeries@3590fc5b]" started-at="2024-02-27T22:01:28 IST" name="verifySurgeryPage" finished-at="2024-02-27T22:01:29 IST" duration-ms="746" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySurgeryPage -->
        <test-method signature="availableSurgeries()[pri:7, instance:testCases.ListingSurgeries@3590fc5b]" started-at="2024-02-27T22:01:29 IST" name="availableSurgeries" finished-at="2024-02-27T22:01:31 IST" duration-ms="2271" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- availableSurgeries -->
      </class> <!-- testCases.ListingSurgeries -->
      <class name="testCases.SearchDoctors">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:testCases.SearchDoctors@71d44a3]" started-at="2024-02-27T22:00:45 IST" name="setup" finished-at="2024-02-27T22:00:53 IST" duration-ms="7673" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="validateLogo()[pri:1, instance:testCases.SearchDoctors@71d44a3]" started-at="2024-02-27T22:00:53 IST" name="validateLogo" finished-at="2024-02-27T22:00:53 IST" duration-ms="87" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLogo -->
        <test-method signature="validateTitle()[pri:2, instance:testCases.SearchDoctors@71d44a3]" started-at="2024-02-27T22:00:53 IST" name="validateTitle" finished-at="2024-02-27T22:00:53 IST" duration-ms="210" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTitle -->
        <test-method signature="validateSpeciality()[pri:3, instance:testCases.SearchDoctors@71d44a3]" started-at="2024-02-27T22:00:53 IST" name="validateSpeciality" finished-at="2024-02-27T22:00:57 IST" duration-ms="3690" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSpeciality -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.SearchDoctors@71d44a3]" started-at="2024-02-27T22:01:39 IST" name="tearDown" finished-at="2024-02-27T22:01:40 IST" duration-ms="1131" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCases.SearchDoctors -->
      <class name="testCases.CorporateForm">
        <test-method signature="verifyFormPage()[pri:8, instance:testCases.CorporateForm@397fbdb]" started-at="2024-02-27T22:01:31 IST" name="verifyFormPage" finished-at="2024-02-27T22:01:38 IST" duration-ms="6431" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFormPage -->
        <test-method signature="validateForm()[pri:9, instance:testCases.CorporateForm@397fbdb]" started-at="2024-02-27T22:01:38 IST" name="validateForm" finished-at="2024-02-27T22:01:39 IST" duration-ms="404" status="FAIL">
          <exception class="java.io.IOException">
            <message>
              <![CDATA[Zip bomb detected! The file would exceed the max. ratio of compressed file size to the size of the expanded data.
This may indicate that the file is used to inflate memory usage and thus could pose a security risk.
You can adjust this limit via ZipSecureFile.setMinInflateRatio() if you need to work with files which exceed this limit.
Uncompressed size: 108206, Raw/compressed size: 1073, ratio: 0.009916
Limits: MIN_INFLATE_RATIO: 0.010000, Entry: xl/styles.xml]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.io.IOException: Zip bomb detected! The file would exceed the max. ratio of compressed file size to the size of the expanded data.
This may indicate that the file is used to inflate memory usage and thus could pose a security risk.
You can adjust this limit via ZipSecureFile.setMinInflateRatio() if you need to work with files which exceed this limit.
Uncompressed size: 108206, Raw/compressed size: 1073, ratio: 0.009916
Limits: MIN_INFLATE_RATIO: 0.010000, Entry: xl/styles.xml
at org.apache.poi.openxml4j.util.ZipArchiveThresholdInputStream.checkThreshold(ZipArchiveThresholdInputStream.java:141)
at org.apache.poi.openxml4j.util.ZipArchiveThresholdInputStream.read(ZipArchiveThresholdInputStream.java:80)
at org.apache.poi.util.IOUtils.toByteArray(IOUtils.java:245)
at org.apache.poi.util.IOUtils.toByteArrayWithMaxLength(IOUtils.java:225)
at org.apache.poi.openxml4j.util.ZipArchiveFakeEntry.<init>(ZipArchiveFakeEntry.java:82)
at org.apache.poi.openxml4j.util.ZipInputStreamZipEntrySource.<init>(ZipInputStreamZipEntrySource.java:98)
at org.apache.poi.openxml4j.opc.ZipPackage.<init>(ZipPackage.java:157)
at org.apache.poi.openxml4j.opc.OPCPackage.open(OPCPackage.java:351)
at org.apache.poi.ooxml.util.PackageHelper.open(PackageHelper.java:64)
at org.apache.poi.xssf.usermodel.XSSFWorkbook.<init>(XSSFWorkbook.java:313)
at org.apache.poi.xssf.usermodel.XSSFWorkbook.<init>(XSSFWorkbook.java:287)
at commonMethods.ExcelUtils.getCellData(ExcelUtils.java:34)
at pageObjectClasses.CorporateFormPOC.fillingForm(CorporateFormPOC.java:75)
at testCases.CorporateForm.validateForm(CorporateForm.java:27)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.io.IOException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateForm -->
      </class> <!-- testCases.CorporateForm -->
      <class name="testCases.ListingReqDoctors">
        <test-method signature="validateFilters()[pri:4, instance:testCases.ListingReqDoctors@41d477ed]" started-at="2024-02-27T22:00:57 IST" name="validateFilters" finished-at="2024-02-27T22:01:26 IST" duration-ms="28636" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of element located by By.xpath: //header[@class = 'c-filter']/div[1]//div[6]/div/div/div//ul/li[2]/span (tried for 20 second(s) with 500 milliseconds interval)
Build info: version: '4.17.0', revision: 'e52b1be057*'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 120.0.6099.130, chrome: {chromedriverVersion: 120.0.6099.109 (3419140ab66..., userDataDir: C:\Users\2304075\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:58573}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:58573/devtoo..., se:cdpVersion: 120.0.6099.130, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 943eb3ccc2a57bdcdfe878386aeb2e9b]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of element located by By.xpath: //header[@class = 'c-filter']/div[1]//div[6]/div/div/div//ul/li[2]/span (tried for 20 second(s) with 500 milliseconds interval)
Build info: version: '4.17.0', revision: 'e52b1be057*'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 120.0.6099.130, chrome: {chromedriverVersion: 120.0.6099.109 (3419140ab66..., userDataDir: C:\Users\2304075\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:58573}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:58573/devtoo..., se:cdpVersion: 120.0.6099.130, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 943eb3ccc2a57bdcdfe878386aeb2e9b
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
at commonMethods.MyExplicitWait.visibilityWait(MyExplicitWait.java:14)
at pageObjectClasses.ListingDoctorsPOC.sorting(ListingDoctorsPOC.java:114)
at testCases.ListingReqDoctors.validateFilters(ListingReqDoctors.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateFilters -->
        <test-method signature="getDetails()[pri:5, instance:testCases.ListingReqDoctors@41d477ed]" started-at="2024-02-27T22:01:26 IST" name="getDetails" finished-at="2024-02-27T22:01:28 IST" duration-ms="1583" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDetails -->
      </class> <!-- testCases.ListingReqDoctors -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
